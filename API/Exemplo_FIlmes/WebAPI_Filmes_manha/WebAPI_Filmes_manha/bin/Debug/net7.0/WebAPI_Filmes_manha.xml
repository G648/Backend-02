<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebAPI_Filmes_manha</name>
    </assembly>
    <members>
        <member name="P:WebAPI_Filmes_manha.Controllers.FilmeController._filmeRepository">
            <summary>
             objeto _generoRepository que iirá receber todos os métodos definidos na interface IGeneroRepository
             </summary>
        </member>
        <member name="M:WebAPI_Filmes_manha.Controllers.FilmeController.#ctor">
            <summary>
            Instancia o objeto _generoRepository para que haja referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:WebAPI_Filmes_manha.Controllers.FilmeController.Get">
            <summary>
            EndPoint que aciona o método ListarTodos no repositório e retorna a resposta para o usuário (front-end)
            </summary>
            <returns>retorna a resposta para o usuário (front-end)</returns>
        </member>
        <member name="M:WebAPI_Filmes_manha.Controllers.FilmeController.Post(WebAPI_Filmes_manha.Domains.FilmeDomain)">
            <summary>
            Método para realizar o cadastro de um novo filme
            </summary>
            <param name="novoFilme">Objeto recebido na requisição</param>
            <returns>Status Code 201 (created)</returns>
        </member>
        <member name="M:WebAPI_Filmes_manha.Controllers.FilmeController.Delete(System.Int32)">
            <summary>
            Método para realizar o delete de um determinado filme
            </summary>
            <param name="id">id recebido para identificar o filme que será excluido</param>
            <returns></returns>
        </member>
        <member name="M:WebAPI_Filmes_manha.Controllers.FilmeController.Get(System.Int32)">
            <summary>
            Método para realizar busca em um Id Específico
            </summary>
            <param name="IdFilme"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI_Filmes_manha.Controllers.FilmeController.Update(WebAPI_Filmes_manha.Domains.FilmeDomain)">
            <summary>
            Método para realizar a atualização de um fime pelo corpo
            </summary>
            <param name="filme">Retornando o objeto todo para realizar o update pelo corpo do objeto</param>
            <returns>Retorna o objeto atualizado como um todo</returns>
        </member>
        <member name="M:WebAPI_Filmes_manha.Controllers.FilmeController.UpdateById(System.Int32,WebAPI_Filmes_manha.Domains.FilmeDomain)">
            <summary>
            Método para realizar a atualização de um determinado filme, especificando o ID do mesmo
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:WebAPI_Filmes_manha.Controllers.GeneroController._generoRepository">
            <summary>
             objeto _generoRepository que iirá receber todos os métodos definidos na interface IGeneroRepository
             </summary>
        </member>
        <member name="M:WebAPI_Filmes_manha.Controllers.GeneroController.#ctor">
            <summary>
            Instancia o objeto _generoRepository para que haja referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:WebAPI_Filmes_manha.Controllers.GeneroController.Get">
            <summary>
            EndPoint que aciona o método ListarTodos no repositório e retorna a resposta para o usuário (front-end)
            </summary>
            <returns>retorna a resposta para o usuário (front-end)</returns>
        </member>
        <member name="M:WebAPI_Filmes_manha.Controllers.GeneroController.Post(WebAPI_Filmes_manha.Domains.GeneroDomain)">
            <summary>
            EndPoint que aciona o método de cadastro de gênero
            </summary>
            <param name="NovoGenero">Objeto recebido na requisição</param>
            <returns>Status Code 201 (created)</returns>
        </member>
        <member name="M:WebAPI_Filmes_manha.Controllers.GeneroController.Delete(System.Int32)">
            <summary>
            Endpoint que deleta todos os objetos criados
            </summary>
            <param name="IdGenero">Objeto deletado na requisição</param>
            <returns>Status code 204 (No Content)</returns>
        </member>
        <member name="M:WebAPI_Filmes_manha.Controllers.GeneroController.BuscarPorId(System.Int32)">
            <summary>
            Endpoint que busca um Id Específico
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI_Filmes_manha.Controllers.GeneroController.Update(WebAPI_Filmes_manha.Domains.GeneroDomain)">
            <summary>
                Atualizando os dados 
            </summary>
            <param name="genero"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI_Filmes_manha.Controllers.GeneroController.UpdateById(System.Int32,WebAPI_Filmes_manha.Domains.GeneroDomain)">
            <summary>
            Atualizando os dados apenas com o ID da requisição
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI_Filmes_manha.Controllers.UsuarioController.buscarUser(System.String,System.String)">
            <summary>
            Método para realizar a busca de um determinado usuário cadastrado em nosso sistema
            </summary>
            <param name="EmailUser"></param>
            <param name="SenhaUser"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI_Filmes_manha.Domains.FilmeDomain">
            <summary>
                Classe que representa a entidade (tabela) filme
            </summary>
        </member>
        <member name="T:WebAPI_Filmes_manha.Domains.GeneroDomain">
            <summary>
                Classe que representa a entidade(Tabela) Genero
            </summary>
        </member>
        <member name="P:WebAPI_Filmes_manha.Domains.UsuarioDomain.IdUsuario">
            <summary>
                Classe que representa a entidade(Tabela) Usuario
            </summary>
        </member>
        <member name="T:WebAPI_Filmes_manha.Interfaces.IFilmeRepository">
            <summary>
                Interface responsável pelo repositório FilmeRepository
                Definir os métodos que serão implementados pelo FilmeRepository
            </summary>
        </member>
        <member name="M:WebAPI_Filmes_manha.Interfaces.IFilmeRepository.cadastrar(WebAPI_Filmes_manha.Domains.FilmeDomain)">
            <summary>
                Cadastrar um novo filme
            </summary>
            <param name="novoFilme">Objeto que sera cadastrado</param>
        </member>
        <member name="M:WebAPI_Filmes_manha.Interfaces.IFilmeRepository.ListarTodos">
            <summary>
                Listar todos os objetos cadastrados
            </summary>
            <returns> Lista com Objetos </returns>
        </member>
        <member name="M:WebAPI_Filmes_manha.Interfaces.IFilmeRepository.AtualizarIdCorpo(WebAPI_Filmes_manha.Domains.FilmeDomain)">
            <summary>
            Atualiza um objeto existente passando o seu id pelo corpo da requisião
            </summary>
            <param name="filme">Objeto atualizado pelo corpo</param>
        </member>
        <member name="M:WebAPI_Filmes_manha.Interfaces.IFilmeRepository.AtualizarIdUrl(System.Int32,WebAPI_Filmes_manha.Domains.FilmeDomain)">
            <summary>
            Atualizando objeto existente passando o seu id pela url
            </summary>
            <param name="id">id do objeto que será atualizado</param>
            <param name="filme">Objeto atualizado (novas informações)</param>
        </member>
        <member name="M:WebAPI_Filmes_manha.Interfaces.IFilmeRepository.Deletar(System.Int32)">
            <summary>
                Deletar um objeto 
            </summary>
            <param name="id">Id do objeto que será deletado</param>
        </member>
        <member name="M:WebAPI_Filmes_manha.Interfaces.IFilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um objeto através do seu id
            </summary>
            <param name="id">id do objeto a ser buscado</param>
            <returns>Objeto Buscado</returns>
        </member>
        <member name="T:WebAPI_Filmes_manha.Interfaces.IGeneroRepository">
            <summary>
                Interface responsável pelo repositório GeneroRepository
                Definir os métodos que serão implementados pelo GeneroRepository
            </summary>
        </member>
        <member name="M:WebAPI_Filmes_manha.Interfaces.IGeneroRepository.Cadastrar(WebAPI_Filmes_manha.Domains.GeneroDomain)">
            <summary>
             Cadastrar um novo genero
            </summary>
            <param name="novoGenero">Objeto que será cadastrado</param>
        </member>
        <member name="M:WebAPI_Filmes_manha.Interfaces.IGeneroRepository.ListarTodos">
            <summary>
             Listar todos os objetos cadastrados
            </summary>
            <returns> lista com objetos </returns>
        </member>
        <member name="M:WebAPI_Filmes_manha.Interfaces.IGeneroRepository.AtualizarIdCorpo(WebAPI_Filmes_manha.Domains.GeneroDomain)">
            <summary>
            Atualiza um objeto existente passando o seu id pelo corpo da requisião
            </summary>
            <param name="genero">Objeto atualizado pelo corpo </param>
        </member>
        <member name="M:WebAPI_Filmes_manha.Interfaces.IGeneroRepository.AtualizarIdUrl(System.Int32,WebAPI_Filmes_manha.Domains.GeneroDomain)">
            <summary>
            Atualizando objeto existente passando o seu id pela url
            </summary>
            <param name="id"> id do objeto que será atualizado</param>
            <param name="genero"> Objeto atualizado (novas informações)</param>
        </member>
        <member name="M:WebAPI_Filmes_manha.Interfaces.IGeneroRepository.Deletar(System.Int32)">
            <summary>
            deletar um objeto 
            </summary>
            <param name="id">Id do objeto que será deletado</param>
        </member>
        <member name="M:WebAPI_Filmes_manha.Interfaces.IGeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um objeto através do seu id
            </summary>
            <param name="id"> id do objeto a ser buscado</param>
            <returns>Objeto Buscado</returns>
        </member>
        <member name="F:WebAPI_Filmes_manha.Repositories.FilmeRepository.StringConexao">
            <summary>
            String de conexão com o banco de dados que recebe os seguintes parametros:
            DataSource : Nome do servidor
            Initial Catalog : Nome da tabela do banco de dados
            Autenticação:
                -windows: Integrated security = true
                -sqlserver: userId = sa; Pwd = senha
            </summary>
        </member>
        <member name="M:WebAPI_Filmes_manha.Repositories.FilmeRepository.AtualizarIdUrl(System.Int32,WebAPI_Filmes_manha.Domains.FilmeDomain)">
            <summary>
            Busca um filme pelo filme que especificamos na requisição
            </summary>
            <param name="id">Id do genero a ser buscado </param>
            <param name="filme">Objeto com as informações a serem atualizadas</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:WebAPI_Filmes_manha.Repositories.FilmeRepository.ListarTodos">
            <summary>
            Listar todos os objetos Filmes
            </summary>
            <returns>Lista contendo todos os objetos filmes</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:WebAPI_Filmes_manha.Repositories.GeneroRepository">
            <summary>
            
            </summary>
        </member>
        <member name="F:WebAPI_Filmes_manha.Repositories.GeneroRepository.StringConexao">
            <summary>
            String de conexão com o banco de dados que recebe os seguintes parâmetros:
            Datasource : Nome do Servidor
            Initial Catalog: Nome da tabela do banco de dados
            Autenticação:
                -windows: Integrated security = true
                -sqlServer: userId = sa; Pwd = senha
            </summary>
        </member>
        <member name="M:WebAPI_Filmes_manha.Repositories.GeneroRepository.AtualizarIdUrl(System.Int32,WebAPI_Filmes_manha.Domains.GeneroDomain)">
            <summary>
            Atualizar um gênero com base no seu ID
            </summary>
            <param name="id">Id do gênero a ser atualizado</param>
            <param name="genero">Objeto com as informações a serem atualizadas</param>
        </member>
        <member name="M:WebAPI_Filmes_manha.Repositories.GeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um gênero através do seu ID
            </summary>
            <param name="id"> Id do genero a ser buscado </param>
            <returns> Objeto buscado ou null caso não seja encontrado</returns>
        </member>
        <member name="M:WebAPI_Filmes_manha.Repositories.GeneroRepository.Cadastrar(WebAPI_Filmes_manha.Domains.GeneroDomain)">
            <sumary>
             Cadastrar um novo gênero
             </sumary>
             <param name="novoGenero"> Objeto com as informações que serão cadastradas</param>
        </member>
        <member name="M:WebAPI_Filmes_manha.Repositories.GeneroRepository.Deletar(System.Int32)">
            <summary>
             Deleta os objetos que foram cadastrados
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:WebAPI_Filmes_manha.Repositories.GeneroRepository.ListarTodos">
            <summary>
                Listar todos os objetos gêneros
            </summary>
            <returns> Lista contendo todos os objetos generos </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
    </members>
</doc>
